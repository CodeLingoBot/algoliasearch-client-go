// Code generated by go generate. DO NOT EDIT.

package search

import (
    "github.com/algolia/algoliasearch-client-go/algolia/debug"
)

type {{ title . }}Iterator struct {
    {{ . }}s   []{{ title . }}
    browser func(int) (Search{{ title . }}sRes, error)
    nbPages int
    page    int
    pos     int
}

func new{{ title . }}Iterator(browser func(page int) (Search{{ title . }}sRes, error)) (it *{{ title . }}Iterator, err error) {
    it = &{{ title . }}Iterator{browser: browser}
    err = it.loadNextPage()
    return
}

func (it *{{ title . }}Iterator) Next() (*{{ title . }}, error) {
    if it.pos >= len(it.{{ . }}s) {
        if it.page >= it.nbPages {
            return nil, NoMore{{ title . }}sErr
        } else {
            err := it.loadNextPage()
            if err != nil {
                return nil, err
            }
        }
    }

    {{ . }} := it.{{ . }}s[it.pos]
    it.pos++
    return &{{ . }}, nil
}

func (it *{{ title . }}Iterator) loadNextPage() error {
    res, err := it.browser(it.page)
    if err != nil {
        return err
    }

    it.pos = 0
    it.page++
    it.nbPages = res.NbPages
    it.{{ . }}s, err = res.{{ title . }}s()
    debug.Printf("{{ title . }}Iterator: new page %d/%d loaded (%d {{ . }}s)\n", it.page, it.nbPages, len(it.{{ . }}s))

    return err
}
