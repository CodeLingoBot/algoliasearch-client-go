// Code generated by go generate. DO NOT EDIT.

package search

import (
	"encoding/json"
	"fmt"

	"github.com/algolia/algoliasearch-client-go/algolia/opt"
)

type Settings struct {
	{{- range $_, $setting := . }}
	{{ $setting.Name }} *opt.{{ $setting.Name }}Option `json:"{{ if $setting.OverrideJSONTag }}{{ $setting.OverrideJSONTag }}{{ else }}{{ lowerFirstLetter $setting.Name }}{{ end}},omitempty"`
	{{- end }}
}

type settings Settings

type backwardCompatibleSettings struct {
	{{- range $_, $setting := . -}}
    {{ if $setting.BackwardCompatibleAlternative }}
	{{ $setting.BackwardCompatibleAlternative }} *opt.{{ $setting.Name }}Option `json:"{{ lowerFirstLetter $setting.BackwardCompatibleAlternative }},omitempty"`
	{{- end }}
	{{- end }}
}

func (s *Settings) UnmarshalJSON(data []byte) error {
	var bcSettings backwardCompatibleSettings
	err := json.Unmarshal(data, &bcSettings)
	if err != nil {
		return fmt.Errorf("cannot unmarshal backward-compatible settings: %v", err)
	}

	err = json.Unmarshal(data, (*settings)(s))
	if err != nil {
		return fmt.Errorf("cannot unmarshal settings: %v", err)
	}

	{{ range $_, $setting := . -}}
	{{ if $setting.BackwardCompatibleAlternative }}
	if s.{{ $setting.Name }} == nil {
		s.{{ $setting.Name }} = bcSettings.{{ $setting.BackwardCompatibleAlternative }}
	}
	{{ end }}
	{{- end }}
	return nil
}