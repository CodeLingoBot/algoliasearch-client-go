// Code generated by go generate. DO NOT EDIT.

package opt

import "encoding/json"

type DistinctOption struct {
	value int
}

func Distinct(v int) *DistinctOption {
	return &DistinctOption{v}
}

func (o DistinctOption) Get() int {
	return o.value
}

func (o DistinctOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(o.value)
}

func (o *DistinctOption) UnmarshalJSON(data []byte) error {
	if string(data) == "null" {
		o.value = 0
		return nil
	}
	return json.Unmarshal(data, &o.value)
}

func (o *DistinctOption) Equal(o2 *DistinctOption) bool {
	if o2 == nil {
		return o.value == 0
	}
	return o.value == o2.value
}

func DistinctEqual(o1, o2 *DistinctOption) bool {
	if o1 != nil {
		return o1.Equal(o2)
	}
	if o2 != nil {
		return o2.Equal(o1)
	}
	return true
}
